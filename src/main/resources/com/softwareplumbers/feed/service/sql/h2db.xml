<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
 	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd" xmlns:aop="http://www.springframework.org/schema/aop">
    
    <context:annotation-config />
    
    <bean id="conversionService"
    class="org.springframework.context.support.ConversionServiceFactoryBean"/>
      
    <bean id="dropScript" class="com.softwareplumbers.common.sql.Script">
        <property name="sql" >
            <value>
                DROP TABLE IF EXISTS FEEDS;
                DROP TABLE IF EXISTS MESSAGES;
            </value>
        </property>
    </bean>
        
    <bean id="createScript" class="com.softwareplumbers.common.sql.Script">
        <property name="sql" >
            <value>
                CREATE TABLE FEEDS (
                    ID UUID PRIMARY KEY,
                    PARENT_ID UUID,
                    NAME VARCHAR(255),
                    VERSION VARCHAR(255) DEFAULT '',
                    DELETED BOOLEAN DEFAULT FALSE
                );
                
                INSERT INTO FEEDS (ID) VALUES ('00000000-0000-0000-0000-000000000000');

                CREATE TABLE MESSAGES (
                    ID UUID PRIMARY KEY,
                    FULL_NAME VARCHAR(256),
                    RECEIVED TIMESTAMP,
                    FEED_ID UUID,
                    HEADERS CLOB,
                    LENGTH BIGINT,
                    DATA BLOB
                );
                
            </value>
        </property>
    </bean>
    
    <bean id="updateScript" class="com.softwareplumbers.common.sql.Script">        
        <property name="sql">
            <value>
                CREATE UNIQUE INDEX FEED_NAME ON FEEDS (PARENT_ID, NAME, VERSION);
            </value>
        </property>
    </bean>
    
    <bean id="operationStore" class="com.softwareplumbers.common.sql.OperationStore" scope="singleton">
        <constructor-arg>
            <map key-type="com.softwareplumbers.feed.service.sql.MessageDatabase.Operation">
                <entry key="CREATE_MESSAGE" value="INSERT INTO MESSAGES (ID, FULL_NAME, RECEIVED, FEED_ID, HEADERS, LENGTH, DATA) VALUES (?,?,?,?,?,?,?)"/>
                <entry key="GET_MESSAGE" value="SELECT ID, FULL_NAME, RECEIVED, FEED_ID, HEADERS, LENGTH, DATA FROM MESSAGES WHERE ID=?"/>
                <entry key="GET_FEED_BY_ID" value="SELECT ID, PARENT_ID, NAME, VERSION, DELETED FROM FEEDS WHERE FEED_ID=?"/>
                <entry key="CREATE_FEED" value="INSERT INTO FEEDS (ID, PARENT_ID, NAME) VALUES (?,?,?)"/>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="templateStore" class="com.softwareplumbers.common.sql.TemplateStore" scope="singleton"> 
        <constructor-arg>
            <map key-type="com.softwareplumbers.feed.service.sql.MessageDatabase.Template">
                <entry key="GET_FEED_BY_NAME" value="SELECT T0.ID, T0.PARENT_ID, T0.NAME, T0.VERSION, T0.DELETED, !{0} AS PATH !{1}"/>
                <entry key="SELECT_MESSAGES" value="SELECT T0.ID, T0.FULL_NAME, T0.RECEIVED, T0.FEED_ID, T0.HEADERS, T0.LENGTH, T0.DATA !{0}"/>
                <entry key="NAME_EXPR">
                    <value> || '/' || T!{0}.NAME || CASEWHEN(T!{0}.VERSION='', '', '@' || T!{0}.VERSION)</value>
                </entry>
            </map>
        </constructor-arg>
    </bean>

</beans>