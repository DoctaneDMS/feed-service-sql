<?xml version = "1.0" encoding = "UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    " 
    default-lazy-init="true"
>
    
    <context:annotation-config />
    
    <bean id="conversionService"
    class="org.springframework.context.support.ConversionServiceFactoryBean"/>
      
    <bean id="mysql.feed.dropScript" class="com.softwareplumbers.common.sql.Script">
        <property name="sql" >
            <value>
                DROP TABLE IF EXISTS FEEDS;
                DROP TABLE IF EXISTS MESSAGES;
            </value>
        </property>
    </bean>
        
    <bean id="mysql.feed.createScript" class="com.softwareplumbers.common.sql.Script">
        <property name="sql" >
            <value>
                CREATE TABLE FEEDS (
                    ID BINARY(16) PRIMARY KEY,
                    PARENT_ID BINARY(16),
                    NAME VARCHAR(255),
                    VERSION VARCHAR(255),
                    DELETED BOOLEAN DEFAULT FALSE
                );
                
                INSERT INTO FEEDS (ID) VALUES (UUID_TO_BIN('00000000-0000-0000-0000-000000000000'));

                CREATE TABLE MESSAGES (
                    ID BINARY(16) PRIMARY KEY,
                    FULL_NAME VARCHAR(256),
                    SENDER VARCHAR(256),
                    RECEIVED TIMESTAMP(6),
                    FEED_ID BINARY(16),
                    HEADERS JSON,
                    LENGTH BIGINT,
                    DATA BLOB,
                    TYPE VARCHAR(64),
                    SERVER_ID BINARY(16),
                    REMOTE_SVR_ID BINARY(16),
                    REMOTE_TIMESTAMP TIMESTAMP(6)
                );

                CREATE UNIQUE INDEX FEED_NAME ON FEEDS (PARENT_ID, NAME, VERSION);                
            </value>
        </property>
    </bean>
    
    <bean id="mysql.feed.updateScript" class="com.softwareplumbers.common.sql.Script">        
        <property name="sql">
            <value>
            </value>
        </property>
    </bean>
    
    <bean id="mysql.feed.operations" class="com.softwareplumbers.common.sql.OperationStore" scope="singleton">
        <constructor-arg>
            <map key-type="com.softwareplumbers.feed.service.sql.MessageDatabase.Operation">
                <entry key="CREATE_MESSAGE" value="INSERT INTO MESSAGES (ID, FULL_NAME, SENDER, RECEIVED, FEED_ID, HEADERS, LENGTH, DATA, TYPE, SERVER_ID, REMOTE_SVR_ID, REMOTE_TIMESTAMP) VALUES (?,?,?,?,?,?,?,?)"/>
                <entry key="GET_MESSAGE" value="SELECT ID, FULL_NAME, SENDER, RECEIVED, FEED_ID, HEADERS, LENGTH, DATA, TYPE, SERVER_ID, REMOTE_SVR_ID, REMOTE_TIMESTAMP FROM MESSAGES WHERE ID=?"/>
                <entry key="GET_FEED_BY_ID" value="SELECT ID, PARENT_ID, NAME, VERSION, DELETED FROM FEEDS WHERE FEED_ID=?"/>
                <entry key="CREATE_FEED" value="INSERT INTO FEEDS (ID, PARENT_ID, NAME, VERSION) VALUES (?,?,?,?)"/>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="mysql.feed.templates" class="com.softwareplumbers.common.sql.TemplateStore" scope="singleton"> 
        <constructor-arg>
            <map key-type="com.softwareplumbers.feed.service.sql.MessageDatabase.Template">
                <entry key="GET_FEED_BY_NAME" value="SELECT T0.ID, T0.PARENT_ID, T0.NAME, T0.VERSION, T0.DELETED, !{0} AS PATH !{1}"/>
                <entry key="SELECT_MESSAGES" value="SELECT T0.ID, T0.FULL_NAME, T0.SENDER, T0.RECEIVED, T0.FEED_ID, T0.HEADERS, T0.LENGTH, T0.DATA !{0}"/>
                <entry key="NAME_EXPR">
                    <value>CONCAT(!{1}, '/', T!{0}.NAME, IF(T!{0}.VERSION='__CURRENT', '', CONCAT('@', T!{0}.VERSION)))</value>
                </entry>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="mysql.feed.schema" class="com.softwareplumbers.common.sql.Schema"> 
        <property name="valueFormatter"><bean class="com.softwareplumbers.feed.service.sql.MessageDatabase.MySQLValueFormatter"/></property>
        <property name="createScript" ref="mysql.feed.createScript"/>
        <property name="updateScript" ref="mysql.feed.updateScript"/>
        <property name="dropScript" ref="mysql.feed.dropScript"/>
        <property name="supportedEntities" value="com.softwareplumbers.feed.service.sql.MessageDatabase.EntityType"/>
        <property name="supportedTypes" value="com.softwareplumbers.feed.service.sql.MessageDatabase.DataType"/>        
        <property name="entityMap" ref="feed.entityMap"/>
    </bean>
</beans>
