buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
  id "org.jdrupes.mdoclet" version "1.0.10"
  id 'org.springframework.boot' version '1.5.22.RELEASE' apply false
}

String propValue(String propName, String defValue) {
    (project.hasProperty(propName) && project.getProperty(propName)) ? project.getProperty(propName) : defValue
}

version = propValue("ci_version","master");
group = "com.softwareplumbers.oss"

def SNAPSHOT_BUILDS = ["master"];

if (SNAPSHOT_BUILDS.contains(version)) { version = version + "-SNAPSHOT" };

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'io.spring.dependency-management'

test {
    systemProperties = System.properties
    systemProperty "installation.root", propValue("installFolder", "/var/tmp/test/files")
    systemProperty "database.url", propValue("databaseUrl", "jdbc:h2:file://var/tmp/test/h2")
    systemProperty "database.driver", propValue("databaseDriver", "org.h2.Driver")
    systemProperty "database.user", propValue("databaseUser", "sa")
    systemProperty "database.password", propValue("databasePassword", "")
    systemProperty "database.variant", propValue("databaseVariant", "h2")    
    systemProperty "spring.datasource.maxActive", 32
    systemProperty "test.TestCluster.testMessageRoundtripBidirectional.SEND_COUNT", 50
    systemProperty "test.TestCluster.testMessageRoundtripMonodirectional.SEND_COUNT", 50
    systemProperty "test.TestCluster.testMessageRoundtripSingleThread.SEND_COUNT", 50  
    systemProperty "test.TestCluster.TIMEOUT", 10
    systemProperty "test.TestFeedService.testMessageRoundtripSingleThread.SEND_COUNT", 50
    systemProperty "test.TestFeedService.testMessageRoundtripMultipleThreads.SEND_COUNT", 20
    systemProperty "test.TestFeedService.TIMEOUT", 20    
    testLogging {
        events "passed", "skipped", "failed"
        outputs.upToDateWhen {false}
        showStandardStreams = propValue("showStandardStreams", "true").toBoolean();        
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

jar {
	enabled = true
    exclude('logback.xml')
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier 'sources'
	from sourceSets.main.allSource
}


artifacts {
	archives sourcesJar
    archives jar
}

repositories {
    maven { url propValue("proxyMavenCentral", "https://repo.maven.apache.org/maven2/") }
    maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss' }
    maven { url 'https://nexus.softwareplumbers.com/repository/maven-oss-snapshot' }
    maven { 
      url 'https://nexus.softwareplumbers.com/repository/maven-oss' 
      credentials { 
        username propValue("mavenUploadUser","") 
        password propValue("mavenUploadPassword","")
      }
    }
    maven { 
      url 'https://nexus.softwareplumbers.com/repository/maven-oss-snapshot' 
      credentials { 
        username propValue("mavenUploadUser","") 
        password propValue("mavenUploadPassword","")
      }
    }
    maven { 
      url 'https://nexus.softwareplumbers.com/repository/oracle' 
      credentials { 
        username propValue("mavenUploadUser","") 
        password propValue("mavenUploadPassword","")
      }
    }     
}

uploadArchives {
  dependsOn check
  repositories {
    mavenDeployer {
      repository(url: "https://nexus.softwareplumbers.com/repository/maven-oss") {
        authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
      }
      snapshotRepository(url: "https://nexus.softwareplumbers.com/repository/maven-oss-snapshot") {
        authentication(userName: propValue("mavenUploadUser",""), password: propValue("mavenUploadPassword",""))
      }
    }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
    // Check for updates to dependencies marked 'changing' every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencyManagement {      
	imports {
		mavenBom 'org.springframework.boot:spring-boot-dependencies:1.5.22.RELEASE'
	}
}

dependencies {
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.2'
    compile group: 'com.softwareplumbers.oss', name: 'feed-interface-core', version: '0.0.22'
    compile group: 'com.softwareplumbers.oss', name: 'fluent-statement', version: '0.0.19'
    compile group: 'javax.json', name: 'javax.json-api', version: '1.1.2'
    compile group: 'org.springframework', name: 'spring-context'

    runtime group: 'org.glassfish', name: 'javax.json', version: '1.1.2'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'com.softwareplumbers.oss', name: 'feed-interface-core', version: '0.0.22', classifier: 'tests'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    testCompile group: 'com.oracle.jdbc', name: 'ojdbc8', version: '18.3.0.0'
    testCompile group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
    
}
